version: '3.8'

services:
  ecommerceproductapi:
    build:
      context: ./ECommerceProductService
      dockerfile: Dockerfile
    ports:
      - "5268:5268" # Adjust port mappings as needed
    volumes:
      - ./ECommerceProductService/appsettings.json:/app/appsettings.json # Adjust path as needed      
    networks:
      - redis-network # Connect to the same network as Redis

  ecommerceuserapi:
    build:
      context: ./ECommerceUserService
      dockerfile: Dockerfile
    ports:
      - "5269:5269" # Adjust port mappings as needed
    volumes:
      - ./ECommerceUserService/appsettings.json:/app/appsettings.json # Adjust path as needed
    networks:
      - redis-network # Connect to the same network as Redis

  redis:
    image: redis:latest  # Use the latest Redis image
    container_name: redis-server  # Name of the container
    ports:
      - "6379:6379"  # Expose port 6379 to the host
    volumes:
      - redis-data:/data  # Persist data using a volume
    networks:
      - redis-network  # Define a custom network

volumes:
  redis-data:  # Define a named volume for Redis data persistence

networks:
  redis-network:  # Define a custom network for Redis
